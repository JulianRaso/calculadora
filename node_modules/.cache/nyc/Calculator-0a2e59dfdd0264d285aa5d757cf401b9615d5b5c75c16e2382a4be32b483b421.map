{"version":3,"file":"C:\\Users\\Julian\\Desktop\\Facultad\\Ingenieria en Software II\\GitHub Repos\\calculadora\\src\\Calculator.ts","sources":["C:\\Users\\Julian\\Desktop\\Facultad\\Ingenieria en Software II\\GitHub Repos\\calculadora\\src\\Calculator.ts"],"names":[],"mappings":";;AACA;IAAA;IAkEE,CAAC;IAhEQ,gBAAK,GAAZ,UAAa,CAAS,EAAE,CAAS;QAC7B,IAAM,GAAG,GAAG,EAAE,CAAC;QAEjB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAC;YACxB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACd;QAED,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAC;YACxB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACd;QACD,OAAO,GAAG,CAAC,MAAM,CAAC;IACpB,CAAC;IAEM,gBAAK,GAAZ,UAAa,CAAS,EAAE,CAAS;QAC/B,IAAM,GAAG,GAAG,EAAE,CAAC;QAEf,IAAG,CAAC,GAAG,CAAC,EAAC;YAEP,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAC;gBACxB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACd;YAED,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAC;gBACxB,GAAG,CAAC,GAAG,EAAE,CAAC;aACX;YACD,OAAO,GAAG,CAAC,MAAM,CAAC;SACnB;aAEG;YACF,IAAI,CAAC,GAAC,CAAC,CAAC;YAER,KAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,CAAC,EAAC,CAAC,EAAE,EAAC;gBACZ,KAAI,CAAC,GAAC,CAAC,EAAC,CAAC,IAAE,CAAC,EAAC,CAAC,EAAE,EAAC;iBAChB;aACJ;YACD,OAAO,CAAC,CAAC;SACV;IACH,CAAC;IAEM,sBAAW,GAAlB,UAAmB,CAAS,EAAE,CAAS;QACrC,IAAI,GAAG,CAAC;QAEN,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAC;YACxB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;SAC1B;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IAEM,kBAAO,GAAd,UAAe,CAAS,EAAE,CAAS;QACjC,IAAI,GAAG,GAAG,CAAC,CAAC;QAEZ,IAAG,CAAC,GAAC,CAAC,EAAC;YACL,OAAM,CAAC,GAAG,CAAC,EAAC;gBACF,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;gBACpB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;aACzB;YACD,OAAO,GAAG,CAAC;SACpB;aACG;YACF,OAAO,GAAG,CAAC;SACZ;IAEH,CAAC;IAEH,iBAAC;AAAD,CAAC,AAlEH,IAkEG","sourcesContent":["import state from '../src/State';\r\nexport default class calculator {\r\n\r\n    static Sumar(a: number, b: number){\r\n        const arr = [];\r\n\r\n      for(let i = 0; i < a; i++){\r\n        arr.push('');  \r\n      }\r\n\r\n      for(let i = 0; i < b; i++){\r\n        arr.push('');  \r\n      }\r\n      return arr.length;\r\n    }\r\n\r\n    static Resta(a: number, b: number){\r\n      const arr = [];\r\n\r\n      if(a > b){\r\n\r\n        for(let i = 0; i < a; i++){\r\n          arr.push('');  \r\n        }\r\n  \r\n        for(let i = 0; i < b; i++){\r\n          arr.pop();  \r\n        }\r\n        return arr.length;\r\n      }\r\n\r\n      else{\r\n        let c=0;\r\n        \r\n        for(b=b;b>0;b--){\r\n            for(c=a;c==a;a--){\r\n            }\r\n        }\r\n        return a;\r\n      }\r\n    }\r\n\r\n    static Multiplicar(a: number, b: number){\r\n      let aux;\r\n\r\n        for(let i = 0; i < a; i++){\r\n          aux = this.Sumar(b, aux);  \r\n        }\r\n        return aux;\r\n    }\r\n\r\n    static Dividir(a: number, b: number){\r\n      let aux = 0;\r\n      \r\n      if(a>b){\r\n        while(a > 0){\r\n                  a = this.Resta(a,b);\r\n                  aux = this.Sumar(aux,1);\r\n                }\r\n                return aux;\r\n      }\r\n      else{\r\n        return aux;\r\n      }\r\n        \r\n    }\r\n\r\n  }"]}