{"version":3,"file":"C:\\Users\\Julian\\Desktop\\GitHub Repos\\calculadora\\src\\Calculator.ts","sources":["C:\\Users\\Julian\\Desktop\\GitHub Repos\\calculadora\\src\\Calculator.ts"],"names":[],"mappings":";;AAAA,sCAAiC;AACjC;IAAA;IA0DE,CAAC;IAxDQ,gBAAK,GAAZ,UAAa,CAAS,EAAE,CAAS;QAC7B,IAAM,GAAG,GAAG,EAAE,CAAC;QAEjB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAC;YACxB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACd;QAED,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAC;YACxB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SACd;QACD,OAAO,eAAK,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;IACnC,CAAC;IAEM,gBAAK,GAAZ,UAAa,CAAS,EAAE,CAAS;QAC/B,IAAM,GAAG,GAAG,EAAE,CAAC;QAEf,IAAG,CAAC,GAAG,CAAC,EAAC;YAEP,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAC;gBACxB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACd;YAED,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAC;gBACxB,GAAG,CAAC,GAAG,EAAE,CAAC;aACX;YACD,eAAK,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;SAC3B;aAEG;YACF,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAC;gBACxB,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACd;YAED,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAC;gBACxB,GAAG,CAAC,GAAG,EAAE,CAAC;aACX;YACD,OAAO,eAAK,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;SAClC;IACH,CAAC;IAEM,sBAAW,GAAlB,UAAmB,CAAS,EAAE,CAAS;QAEnC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAC;YACxB,eAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,eAAK,CAAC,MAAM,CAAC,CAAA;SAC3C;IACL,CAAC;IAEM,kBAAO,GAAd,UAAe,CAAS,EAAE,CAAS;QACjC,eAAK,CAAC,SAAS,GAAG,CAAC,CAAC;QAElB,OAAM,eAAK,CAAC,SAAS,GAAG,CAAC,EAAC;YACxB,eAAK,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,eAAK,CAAC,SAAS,EAAC,CAAC,CAAC,CAAC;YAChD,eAAK,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,eAAK,CAAC,MAAM,EAAC,CAAC,CAAC,CAAC;SAC3C;IACL,CAAC;IAEH,iBAAC;AAAD,CAAC,AA1DH,IA0DG","sourcesContent":["import state from '../src/State';\r\nexport default class calculator {\r\n\r\n    static Sumar(a: number, b: number){\r\n        const arr = [];\r\n\r\n      for(let i = 0; i < a; i++){\r\n        arr.push('');  \r\n      }\r\n\r\n      for(let i = 0; i < b; i++){\r\n        arr.push('');  \r\n      }\r\n      return state.estado = arr.length;\r\n    }\r\n\r\n    static Resta(a: number, b: number){\r\n      const arr = [];\r\n\r\n      if(a > b){\r\n\r\n        for(let i = 0; i < a; i++){\r\n          arr.push('');  \r\n        }\r\n  \r\n        for(let i = 0; i < b; i++){\r\n          arr.pop();  \r\n        }\r\n        state.estado = arr.length;\r\n      }\r\n\r\n      else{\r\n        for(let i = 0; i < b; i++){\r\n          arr.push('');  \r\n        }\r\n  \r\n        for(let i = 0; i < a; i++){\r\n          arr.pop();  \r\n        }\r\n        return state.estado = arr.length;\r\n      }\r\n    }\r\n\r\n    static Multiplicar(a: number, b: number){\r\n\r\n        for(let i = 0; i < a; i++){\r\n          state.estado = this.Sumar(b, state.estado)  \r\n        }\r\n    }\r\n\r\n    static Dividir(a: number, b: number){\r\n      state.estadoAux = a;\r\n      \r\n        while(state.estadoAux > 0){\r\n          state.estadoAux = this.Resta(state.estadoAux,b);\r\n          state.estado = this.Sumar(state.estado,1);\r\n        }\r\n    }\r\n\r\n  }"]}